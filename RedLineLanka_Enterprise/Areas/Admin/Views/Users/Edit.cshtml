@model RedLineLanka_Enterprise.Areas.Admin.Models.UserVM

@{
    ViewBag.Title = "Edit User";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <p>
            <input type="submit" value="Save" class="btn btn-primary btn-sm" style="min-width:75px" />
        </p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.RowVersion)

        <div class="form-group row">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, htmlAttributes: new { @class = "form-control", placeholder = "Unchanged" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.PopUpSelectorFor(model => model.EmployeeID, "Base", "Data", "GetEmployees", new { @class = "form-control form-select" }, "Please select an Employee", dspFormat: "{1}", hiddenIndices: "0,5")
                @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumEditorFor(model => model.Status, htmlAttributes: new { @class = "form-control form-select" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

<div id="ChildContent">
    @{ Html.RenderAction("ChildIndex", new { id = Model.UserID, isToEdit = true }); }
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/admin/user")
}